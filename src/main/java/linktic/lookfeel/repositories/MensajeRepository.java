package linktic.lookfeel.repositories;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import linktic.lookfeel.model.Mensaje;

public interface MensajeRepository extends JpaRepository<Mensaje, Long> {
	
	@Query(nativeQuery = true, value = "SELECT * FROM\r\n"
			+ "    (\r\n"
			+ "        SELECT\r\n"
			+ "            *\r\n"
			+ "        FROM\r\n"
			+ "            mensaje m\r\n"
			+ "        WHERE\r\n"
			+ "            ( to_char(sysdate, 'DD-MON-YY') BETWEEN m.msjfechaini AND m.msjfechafin )\r\n"
			+ "            AND ( :perfilId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoaperfil)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND msjenviadoalocal IS NULL\r\n"
			+ "            AND msjenviadoacoleg IS NULL\r\n"
			+ "            AND msjenviadoasede IS NULL\r\n"
			+ "            AND msjenviadoajorn IS NULL\r\n"
			+ "        UNION\r\n"
			+ "        SELECT\r\n"
			+ "            *\r\n"
			+ "        FROM\r\n"
			+ "            mensaje m\r\n"
			+ "        WHERE\r\n"
			+ "            ( to_char(sysdate, 'DD-MON-YY') BETWEEN m.msjfechaini AND m.msjfechafin )\r\n"
			+ "            AND ( :perfilId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoaperfil)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :colegioId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoacoleg)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND msjenviadoalocal IS NULL\r\n"
			+ "            AND msjenviadoasede IS NULL\r\n"
			+ "            AND msjenviadoajorn IS NULL\r\n"
			+ "        UNION\r\n"
			+ "        SELECT\r\n"
			+ "            *\r\n"
			+ "        FROM\r\n"
			+ "            mensaje m\r\n"
			+ "        WHERE\r\n"
			+ "            ( to_char(sysdate, 'DD-MON-YY') BETWEEN m.msjfechaini AND m.msjfechafin )\r\n"
			+ "            AND ( :perfilId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoaperfil)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :colegioId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoacoleg)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :localidadId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:localidadId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoalocal)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:localidadId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:localidadId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND msjenviadoasede IS NULL\r\n"
			+ "            AND msjenviadoajorn IS NULL\r\n"
			+ "        UNION\r\n"
			+ "        SELECT\r\n"
			+ "            *\r\n"
			+ "        FROM\r\n"
			+ "            mensaje m\r\n"
			+ "        WHERE\r\n"
			+ "            ( to_char(sysdate, 'DD-MON-YY') BETWEEN m.msjfechaini AND m.msjfechafin )\r\n"
			+ "            AND ( :perfilId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoaperfil)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :colegioId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoacoleg)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :sedeId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:sedeId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoasede)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:sedeId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:sedeId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND msjenviadoajorn IS NULL\r\n"
			+ "        UNION\r\n"
			+ "        SELECT\r\n"
			+ "            *\r\n"
			+ "        FROM\r\n"
			+ "            mensaje m\r\n"
			+ "        WHERE\r\n"
			+ "            ( to_char(sysdate, 'DD-MON-YY') BETWEEN m.msjfechaini AND m.msjfechafin )\r\n"
			+ "            AND ( :perfilId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoaperfil)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:perfilId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :colegioId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoacoleg)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:colegioId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "            AND ( :jornadaId IS NULL\r\n"
			+ "                  OR EXISTS (\r\n"
			+ "                SELECT\r\n"
			+ "                    1\r\n"
			+ "                FROM\r\n"
			+ "                    dual\r\n"
			+ "                WHERE\r\n"
			+ "                    regexp_substr(TRIM(:jornadaId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "                    AND instr(','\r\n"
			+ "                              || TRIM(m.msjenviadoajorn)\r\n"
			+ "                              || ',',\r\n"
			+ "                              ','\r\n"
			+ "                              || regexp_substr(TRIM(:jornadaId),\r\n"
			+ "                                               '[^,]+',\r\n"
			+ "                                               1,\r\n"
			+ "                                               level)\r\n"
			+ "                              || ',') > 0\r\n"
			+ "                CONNECT BY\r\n"
			+ "                    regexp_substr(TRIM(:jornadaId),\r\n"
			+ "                                  '[^,]+',\r\n"
			+ "                                  1,\r\n"
			+ "                                  level) IS NOT NULL\r\n"
			+ "            ) )\r\n"
			+ "    ) qa\r\n"
			+ "ORDER BY\r\n"
			+ "    qa.msjfecha ASC")
	List<Mensaje> listaMensajesHome(String perfilId, String colegioId, String sedeId, String jornadaId, String localidadId);
	
	 @Query(nativeQuery = true, value = "SELECT * FROM (\r\n"
	 		+ "	 		SELECT\r\n"
	 		+ "	 		    *\r\n"
	 		+ "	 		FROM\r\n"
	 		+ "	 		    mensaje m\r\n"
	 		+ "	 		WHERE\r\n"
	 		+ "	 		        m.msjusuario = :usuarioId\r\n"
	 		+ "            AND ((:fechaInicio IS NULL AND :fechaFin IS NULL) OR msjfechaini BETWEEN :fechaInicio AND :fechaFin) \r\n"
	 		+ "	 		UNION\r\n"
	 		+ "	 		SELECT\r\n"
	 		+ "	 		    *\r\n"
	 		+ "	 		FROM\r\n"
	 		+ "	 		    mensaje m\r\n"
	 		+ "	 		WHERE  m.msjusuario IN (\r\n"
	 		+ "            SELECT DISTINCT persona.pernumdocum\r\n"
	 		+ "            FROM\r\n"
	 		+ "                personal persona\r\n"
	 		+ "            JOIN usuario u ON persona.pernumdocum = to_char(u.usupernumdocum)\r\n"
	 		+ "            JOIN g_jerarquia j ON u.usucodjerar = j.g_jercodigo\r\n"
	 		+ "            JOIN institucion ins ON ins.inscodigo = j.g_jerinst\r\n"
	 		+ "            WHERE ins.inscodigo IN (\r\n"
	 		+ "                    SELECT ins.inscodigo\r\n"
	 		+ "                    FROM personal per\r\n"
	 		+ "                    JOIN usuario u ON per.pernumdocum = to_char(u.usupernumdocum)\r\n"
	 		+ "                    JOIN g_jerarquia j ON u.usucodjerar = j.g_jercodigo\r\n"
	 		+ "                    JOIN institucion ins ON ins.inscodigo = j.g_jerinst\r\n"
	 		+ "                    WHERE u.usulogin = :usuarioId\r\n"
	 		+ "                )\r\n"
	 		+ "                AND u.usuperfcodigo IN (\r\n"
	 		+ "                    SELECT DISTINCT u.usuperfcodigo\r\n"
	 		+ "                    FROM personal per\r\n"
	 		+ "                    JOIN usuario u ON per.pernumdocum = to_char(u.usupernumdocum)\r\n"
	 		+ "                    JOIN g_jerarquia j ON u.usucodjerar = j.g_jercodigo\r\n"
	 		+ "                    JOIN institucion ins ON ins.inscodigo = j.g_jerinst\r\n"
	 		+ "                    WHERE u.usulogin = :usuarioId\r\n"
	 		+ "                ))\r\n"
	 		+ "                AND ((:fechaInicio IS NULL AND :fechaFin IS NULL) OR msjfechaini BETWEEN :fechaInicio AND :fechaFin)) q1\r\n"
	 		+ "WHERE (\r\n"
	 		+ "    :perfilId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoaperfil || ',', ',' || REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "AND (\r\n"
	 		+ "    :localidadId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoalocal || ',', ',' || REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "AND (\r\n"
	 		+ "    :colegioId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoacoleg || ',', ',' || REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "ORDER BY q1.msjfechaini ASC")
	 List<Mensaje> listadoMensajesBuscar(String usuarioId, String perfilId, String colegioId, String localidadId, String fechaInicio, String fechaFin);
	
	 @Query(nativeQuery = true, value = "SELECT * FROM (\r\n"
	 		+ "	 		SELECT\r\n"
	 		+ "	 		    *\r\n"
	 		+ "	 		FROM\r\n"
	 		+ "	 		    mensaje m\r\n"
	 		+ "	 		WHERE\r\n"
	 		+ "	 		        m.msjusuario = :usuarioId\r\n"
	 		+ "            AND ((:fechaInicio IS NULL AND :fechaFin IS NULL) OR msjfechaini BETWEEN :fechaInicio AND :fechaFin)\r\n"
	 		+ "	 		UNION\r\n"
	 		+ "	 		SELECT\r\n"
	 		+ "	 		    *\r\n"
	 		+ "	 		FROM\r\n"
	 		+ "	 		    mensaje m\r\n"
	 		+ "	 		WHERE ((:fechaInicio IS NULL AND :fechaFin IS NULL) OR msjfechaini BETWEEN :fechaInicio AND :fechaFin)) q1\r\n"
	 		+ "WHERE (\r\n"
	 		+ "    :perfilId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoaperfil || ',', ',' || REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:perfilId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "AND (\r\n"
	 		+ "    :localidadId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoalocal || ',', ',' || REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:localidadId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "AND (\r\n"
	 		+ "    :colegioId IS NULL \r\n"
	 		+ "    OR EXISTS (\r\n"
	 		+ "        SELECT 1\r\n"
	 		+ "        FROM dual\r\n"
	 		+ "        WHERE \r\n"
	 		+ "            REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "            AND INSTR(',' || q1.msjenviadoacoleg || ',', ',' || REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) || ',') > 0\r\n"
	 		+ "        CONNECT BY REGEXP_SUBSTR(:colegioId, '[^,]+', 1, level) IS NOT NULL\r\n"
	 		+ "    )\r\n"
	 		+ ")\r\n"
	 		+ "ORDER BY q1.msjfechaini ASC")
	List<Mensaje> listadoMensajesBuscarAdmin(String usuarioId, String perfilId, String colegioId, String localidadId, String fechaInicio, String fechaFin);
	 
	 
	@Query(nativeQuery = true, value = "select * from mensaje m\r\n" + "where m.msjcodigo =:id")
	Mensaje verMensaje(Long id);

	@Query(nativeQuery = true, value = "select max(m.msjcodigo) codigo from mensaje m")
	Long maxCodigo();

}
